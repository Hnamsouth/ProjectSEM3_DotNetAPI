// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSEM3.Entities;

#nullable disable

namespace ProjectSEM3.Migrations
{
    [DbContext(typeof(ProjectSem3Context))]
    [Migration("20230808021440_create_database")]
    partial class create_database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectSEM3.Entities.AdCampaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CollectionId")
                        .HasColumnType("int")
                        .HasColumnName("collection_id");

                    b.Property<string>("Desciption")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Img")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PartnersId")
                        .HasColumnType("int")
                        .HasColumnName("partners_id");

                    b.HasKey("Id")
                        .HasName("PK__AdCampai__3214EC07F7E8AE31");

                    b.HasIndex(new[] { "CollectionId" }, "IX_AdCampaign_collection_id");

                    b.HasIndex(new[] { "PartnersId" }, "IX_AdCampaign_partners_id");

                    b.ToTable("AdCampaign", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Admins__3214EC07E6E0EE75");

                    b.HasIndex(new[] { "UserId" }, "IX_Admins_user_id");

                    b.HasIndex(new[] { "Role" }, "UQ__Admins__DA15413E248224BD")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyQty")
                        .HasColumnType("int")
                        .HasColumnName("buy_qty");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("ProductSizeId")
                        .HasColumnType("int")
                        .HasColumnName("productSize_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Carts__3214EC07A226B5B5");

                    b.HasIndex(new[] { "ProductSizeId" }, "IX_Carts_productSize_id");

                    b.HasIndex(new[] { "ProductId" }, "IX_Carts_product_id");

                    b.HasIndex(new[] { "UserId" }, "IX_Carts_user_id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC07DF9A41C9");

                    b.HasIndex(new[] { "Name" }, "UQ__Categori__737584F60CB46E23")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.CategoryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC071CD2494F");

                    b.HasIndex(new[] { "CategoryId" }, "IX_CategoryDetail_category_id");

                    b.HasIndex(new[] { "Name" }, "UQ__Category__737584F67976B658")
                        .IsUnique();

                    b.ToTable("CategoryDetail", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Collecti__3214EC070B2DCC12");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Coupon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC074E2CC928");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.DiscountProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("Discount_id");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_id");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC07763F58C0");

                    b.HasIndex(new[] { "DiscountId" }, "IX_DiscountProduct_Discount_id");

                    b.HasIndex(new[] { "ProductId" }, "IX_DiscountProduct_Product_id");

                    b.ToTable("DiscountProduct", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Favoury", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Favourie__3214EC0752A82DA1");

                    b.HasIndex(new[] { "ProductId" }, "IX_Favouries_product_id");

                    b.HasIndex(new[] { "UserId" }, "IX_Favouries_user_id");

                    b.ToTable("Favouries");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.KindOfSport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__KindOfSp__3214EC077F32249A");

                    b.HasIndex(new[] { "Name" }, "UQ__KindOfSp__737584F6CDD7C52D")
                        .IsUnique();

                    b.ToTable("KindOfSport", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("Admin_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_at");

                    b.HasKey("Id")
                        .HasName("PK__News__3214EC077F5C2BFE");

                    b.HasIndex(new[] { "AdminId" }, "IX_News_Admin_id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShipCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Ship_Code");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC074A5FA77D");

                    b.HasIndex(new[] { "UserId" }, "IX_Orders_user_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("ProductSizeId")
                        .HasColumnType("int")
                        .HasColumnName("productSize_id");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3214EC070E1688EB");

                    b.HasIndex(new[] { "OrderId" }, "IX_OrderDetail_order_id");

                    b.HasIndex(new[] { "ProductSizeId" }, "IX_OrderDetail_productSize_id");

                    b.HasIndex(new[] { "ProductId" }, "IX_OrderDetail_product_id");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("RepresentativeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__Partners__3214EC070E70813E");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.PartnersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Img")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("PartnersId")
                        .HasColumnType("int")
                        .HasColumnName("partners_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Partners__3214EC07AA9DB02A");

                    b.HasIndex(new[] { "PartnersId" }, "IX_PartnersInfo_partners_id");

                    b.ToTable("PartnersInfo", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3214EC07D75A8B65");

                    b.HasIndex(new[] { "OrderId" }, "IX_Payment_order_id");

                    b.HasIndex(new[] { "UserId" }, "IX_Payment_user_id");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryDetailId")
                        .HasColumnType("int")
                        .HasColumnName("category_detail_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("(CONVERT([tinyint],(0)))");

                    b.Property<string>("Img")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int?>("KindofsportId")
                        .HasColumnType("int")
                        .HasColumnName("kindofsport_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("OpenSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 4)");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("(CONVERT([tinyint],(0)))");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC0726D18407");

                    b.HasIndex(new[] { "CategoryDetailId" }, "IX_Products_category_detail_id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Products_category_id");

                    b.HasIndex(new[] { "KindofsportId" }, "IX_Products_kindofsport_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductAdCampaign", b =>
                {
                    b.Property<int?>("AdcampaignId")
                        .HasColumnType("int")
                        .HasColumnName("adcampaign_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasIndex(new[] { "AdcampaignId" }, "IX_ProductAdCampaign_adcampaign_id");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductAdCampaign_product_id");

                    b.ToTable("ProductAdCampaign", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductForChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("PK__ProductF__3214EC071774F8E7");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductForChild_product_id");

                    b.ToTable("ProductForChild", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__ProductR__3214EC075CE6C025");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductReview_product_id");

                    b.HasIndex(new[] { "UserId" }, "IX_ProductReview_user_id");

                    b.ToTable("ProductReview", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ProductS__3214EC07D29ABF3C");

                    b.HasIndex(new[] { "SizeId" }, "IX_ProductSize_SizeId");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductSize_product_id");

                    b.ToTable("ProductSize", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<byte>("SizeType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK__Size__3214EC07E98EF804");

                    b.HasIndex(new[] { "Name" }, "UQ__Size__737584F6F8BC285F")
                        .IsUnique();

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activate")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07AE7F2844");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534B7ED3B19")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserCard", b =>
                {
                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<byte>("Cvc")
                        .HasColumnType("tinyint")
                        .HasColumnName("CVC");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NameOnCard")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CardNumber")
                        .HasName("PK__UserCard__A4E9FFE8CFE115A2");

                    b.HasIndex(new[] { "UserId" }, "IX_UserCard_user_id");

                    b.ToTable("UserCard", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__UserInfo__3214EC07F4ADAEF8");

                    b.HasIndex(new[] { "UserId" }, "IX_UserInfo_user_id");

                    b.ToTable("UserInfo", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Coupon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("DiscountFlat")
                        .HasColumnType("decimal(12, 4)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Voucher__3214EC0765F26938");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.AdCampaign", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Collection", "Collection")
                        .WithMany("AdCampaigns")
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK__AdCampaig__colle__540C7B00");

                    b.HasOne("ProjectSEM3.Entities.Partner", "Partners")
                        .WithMany("AdCampaigns")
                        .HasForeignKey("PartnersId")
                        .HasConstraintName("FK__AdCampaig__partn__531856C7");

                    b.Navigation("Collection");

                    b.Navigation("Partners");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Admin", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Admins")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Admins__user_id__19DFD96B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Cart", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Carts__product_i__1AD3FDA4");

                    b.HasOne("ProjectSEM3.Entities.ProductSize", "ProductSize")
                        .WithMany("Carts")
                        .HasForeignKey("ProductSizeId")
                        .HasConstraintName("FK__Carts__productSi__1CBC4616");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Carts__user_id__1DB06A4F");

                    b.Navigation("Product");

                    b.Navigation("ProductSize");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.CategoryDetail", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Category", "Category")
                        .WithMany("CategoryDetails")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__CategoryD__categ__40058253");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.DiscountProduct", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Discount", "Discount")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK__DiscountP__Disco__1EA48E88");

                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__DiscountP__Produ__1F98B2C1");

                    b.Navigation("Discount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Favoury", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("Favouries")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Favouries__produ__2180FB33");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Favouries")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Favouries__user___22751F6C");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.News", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Admin", "Admin")
                        .WithMany("News")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK__News__Admin_id__236943A5");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Order", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__user_id__282DF8C2");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.OrderDetail", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderDeta__order__245D67DE");

                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OrderDeta__produ__2645B050");

                    b.HasOne("ProjectSEM3.Entities.ProductSize", "ProductSize")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductSizeId")
                        .HasConstraintName("FK__OrderDeta__produ__2739D489");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("ProductSize");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.PartnersInfo", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Partner", "Partners")
                        .WithMany("PartnersInfos")
                        .HasForeignKey("PartnersId")
                        .HasConstraintName("FK__PartnersI__partn__4E53A1AA");

                    b.Navigation("Partners");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Payment", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Payment__order_i__29221CFB");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Payment__user_id__2A164134");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Product", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.CategoryDetail", "CategoryDetail")
                        .WithMany("Products")
                        .HasForeignKey("CategoryDetailId")
                        .HasConstraintName("FK__Products__catego__41EDCAC5");

                    b.HasOne("ProjectSEM3.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__catego__2DE6D218");

                    b.HasOne("ProjectSEM3.Entities.KindOfSport", "Kindofsport")
                        .WithMany("Products")
                        .HasForeignKey("KindofsportId")
                        .HasConstraintName("FK__Products__kindof__40F9A68C");

                    b.Navigation("Category");

                    b.Navigation("CategoryDetail");

                    b.Navigation("Kindofsport");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductAdCampaign", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.AdCampaign", "Adcampaign")
                        .WithMany()
                        .HasForeignKey("AdcampaignId")
                        .HasConstraintName("FK__ProductAd__adcam__56E8E7AB");

                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductAd__produ__55F4C372");

                    b.Navigation("Adcampaign");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductForChild", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("ProductForChildren")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductFo__produ__46B27FE2");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductReview", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductRe__produ__2BFE89A6");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("ProductReviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ProductRe__user___2CF2ADDF");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductSize", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductSi__produ__3A4CA8FD");

                    b.HasOne("ProjectSEM3.Entities.Size", "Size")
                        .WithMany("ProductSizes")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("FK__ProductSi__size___2FCF1A8A");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserCard", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("UserCards")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserCard__user_i__30C33EC3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserInfo", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("UserInfos")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserInfo__user_i__31B762FC");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Admin", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Category", b =>
                {
                    b.Navigation("CategoryDetails");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.CategoryDetail", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Collection", b =>
                {
                    b.Navigation("AdCampaigns");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Discount", b =>
                {
                    b.Navigation("DiscountProducts");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.KindOfSport", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Partner", b =>
                {
                    b.Navigation("AdCampaigns");

                    b.Navigation("PartnersInfos");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("DiscountProducts");

                    b.Navigation("Favouries");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductForChildren");

                    b.Navigation("ProductReviews");

                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductSize", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Size", b =>
                {
                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.User", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Carts");

                    b.Navigation("Favouries");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("ProductReviews");

                    b.Navigation("UserCards");

                    b.Navigation("UserInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
