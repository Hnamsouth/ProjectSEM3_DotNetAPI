// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSEM3.Entities;

#nullable disable

namespace ProjectSEM3.Migrations
{
    [DbContext(typeof(ProjectSem3Context))]
    [Migration("20230722042216_update_database")]
    partial class update_database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectSEM3.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Admins__3214EC07E6E0EE75");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Role" }, "UQ__Admins__DA15413E248224BD")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyQty")
                        .HasColumnType("int")
                        .HasColumnName("buy_qty");

                    b.Property<int?>("ProductColorId")
                        .HasColumnType("int")
                        .HasColumnName("productColor_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("ProductSizeId")
                        .HasColumnType("int")
                        .HasColumnName("productSize_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Carts__3214EC07A226B5B5");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSizeId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC07DF9A41C9");

                    b.HasIndex(new[] { "Name" }, "UQ__Categori__737584F60CB46E23")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Coupon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.DiscountProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductId");

                    b.ToTable("DiscountProduct");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Favoury", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductColorId")
                        .HasColumnType("int")
                        .HasColumnName("productColor_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Favourie__3214EC0752A82DA1");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favouries");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShipCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Ship_Code");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC074A5FA77D");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("ProductColorId")
                        .HasColumnType("int")
                        .HasColumnName("productColor_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("ProductSizeId")
                        .HasColumnType("int")
                        .HasColumnName("productSize_id");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3214EC070E1688EB");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSizeId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3214EC07D75A8B65");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 4)");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC0726D18407");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("PK__ProductC__3214EC071B1CD27C");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductColor", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__ProductR__3214EC075CE6C025");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductReview", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductColorId")
                        .HasColumnType("int")
                        .HasColumnName("productColor_id");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("size_id");

                    b.HasKey("Id")
                        .HasName("PK__ProductS__3214EC07D29ABF3C");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSize", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Size__3214EC07E98EF804");

                    b.HasIndex(new[] { "Name" }, "UQ__Size__737584F6F8BC285F")
                        .IsUnique();

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07AE7F2844");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E41CC69CB7")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534FAE63181")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserCard", b =>
                {
                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<byte>("Cvc")
                        .HasColumnType("tinyint")
                        .HasColumnName("CVC");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NameOnCard")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CardNumber")
                        .HasName("PK__UserCard__A4E9FFE8CFE115A2");

                    b.HasIndex("UserId");

                    b.ToTable("UserCard", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__UserInfo__3214EC07F4ADAEF8");

                    b.HasIndex("UserId");

                    b.ToTable("UserInfo", (string)null);
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Admin", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Admins")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Admins__user_id__4F7CD00D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Cart", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.ProductColor", "ProductColor")
                        .WithMany("Carts")
                        .HasForeignKey("ProductColorId")
                        .HasConstraintName("FK__Carts__productCo__52593CB8");

                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Carts__product_i__534D60F1");

                    b.HasOne("ProjectSEM3.Entities.ProductSize", "ProductSize")
                        .WithMany("Carts")
                        .HasForeignKey("ProductSizeId")
                        .HasConstraintName("FK__Carts__productSi__5441852A");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Carts__user_id__5535A963");

                    b.Navigation("Product");

                    b.Navigation("ProductColor");

                    b.Navigation("ProductSize");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.DiscountProduct", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Discount", "Discount")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("DiscountId");

                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Discount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Favoury", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.ProductColor", "ProductColor")
                        .WithMany("Favouries")
                        .HasForeignKey("ProductColorId")
                        .HasConstraintName("FK__Favouries__produ__5812160E");

                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("Favouries")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Favouries__produ__59063A47");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Favouries")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Favouries__user___59FA5E80");

                    b.Navigation("Product");

                    b.Navigation("ProductColor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.News", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Admin", "Admin")
                        .WithMany("News")
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Order", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__user_id__5DCAEF64");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.OrderDetail", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderDeta__order__6383C8BA");

                    b.HasOne("ProjectSEM3.Entities.ProductColor", "ProductColor")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductColorId")
                        .HasConstraintName("FK__OrderDeta__produ__60A75C0F");

                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OrderDeta__produ__619B8048");

                    b.HasOne("ProjectSEM3.Entities.ProductSize", "ProductSize")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductSizeId")
                        .HasConstraintName("FK__OrderDeta__produ__628FA481");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("ProductColor");

                    b.Navigation("ProductSize");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Payment", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Payment__order_i__66603565");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Payment__user_id__6754599E");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Product", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__catego__398D8EEE");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductColor", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductCo__produ__3C69FB99");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductReview", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductRe__produ__6D0D32F4");

                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("ProductReviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ProductRe__user___6E01572D");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductSize", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.ProductColor", "ProductColor")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductColorId")
                        .HasConstraintName("FK__ProductSi__produ__440B1D61");

                    b.HasOne("ProjectSEM3.Entities.Size", "Size")
                        .WithMany("ProductSizes")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("FK__ProductSi__size___4316F928");

                    b.Navigation("ProductColor");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserCard", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("UserCards")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserCard__user_i__6A30C649");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.UserInfo", b =>
                {
                    b.HasOne("ProjectSEM3.Entities.User", "User")
                        .WithMany("UserInfos")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserInfo__user_i__4BAC3F29");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Admin", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Discount", b =>
                {
                    b.Navigation("DiscountProducts");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("DiscountProducts");

                    b.Navigation("Favouries");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductColors");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductColor", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Favouries");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.ProductSize", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.Size", b =>
                {
                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("ProjectSEM3.Entities.User", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Carts");

                    b.Navigation("Favouries");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("ProductReviews");

                    b.Navigation("UserCards");

                    b.Navigation("UserInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
